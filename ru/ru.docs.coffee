_app.i18n.ru.docs = 
  title: 'Boris the Guard: Документация'
  meta:
    description: 'Как использовать и настроить Boris the Guard? Как получать СМС-сообщения обо всех входах (логинах) через SSH, и когда Ваш сервер недоступен? Как контролировать нагрузку сервера и предотвратить долгий ответ сервера?'
  basics:
    title: 'Предупрежден - защищен'
    text: """
    Главная цель сервиса - это защита серверов и web-сайтов путем предотвращения потенциальных рисков, таких как: недоступность сервера, долгое время ответа, подозрительная активность и нарушение целостности данных. Данные цели осуществляются путем сбора, анализа и накопления данных о Вашем сервере. Уведомления будут высланы Всем ответственным лицам, в соответствии с зоной ответственности. Уведомления высылаются не только по факту происшествия, но и при возникновении возможности таких рисков, давая Вам возможность предотвратить их.
    """

  forWhom:
    title: 'Для кого?'
    text: """
    Наш сервис необходим для тех, кто вовлечен в IT-сферу, связан с web-разработкой и другими решениями, в рамках которых, реализуется публичная инфраструктура. Услуги сервиса незаменимы от частных владельцев доменных имен до компаний, оказывающих IT-услуги.
    """

  how:
    title: 'Как это работает?'
    text: """
    Сервис осуществляет мониторинг IP-адреса(ов), DNS, SSL (TLS) сертификатов, Whois записей и других параметров серверов, добавленных в Ваш аккаунт. Вы можете настроить получение уведомлений при изменении этих данных.

    Добавленные Вами точки мониторинга, возвращают множество полезных данных, на основе которых, Вы будете знать о здоровье Вашего сервера и/или доменного имени. Собранные данные готовы к Вашему анализу. Включите получение уведомлений на отклонение данных мониторинга, от указанной Вами нормы.
    """

  cost:
    title: 'Стоимость'
    text: """
    Бесплатный тариф позволяет следить за IP-адресом, целостностью SSL (TLS) сертификата, DNS и Whois записей.

    Платный тариф позволит Вам получать СМС-сообщения, добавлять точки мониторинга, собирать и анализировать пользовательские данные. Ежемесячная стоимость $9.95 за сервер. Вы можете отменить платный тариф в любой момент с возвращением средств на внутренний баланс.

    Все новые аккаунты получают $15 в качестве стартового баланса, этого достаточно для тестирования 1 сервера в течение месяца, включая СМС-сообщения.

    СМС-сообщения оплачиваются отдельно. Стоимость отправки СМС-сообщения зависит от оператора связи и страны. С Вашего баланса будет списана фактическая стоимость отправленного сообщения. Мы не зарабатываем на отправке СМС-сообщений. 

    Когда на Вашем балансе будет недостаточно средств для отправки СМС-сообщения, Вы получите уведомление на Ваш основной email-адрес. Также Вы будете уведомлены за 10 СМС-сообщений до достижения лимита по Вашему балансу.
    """

  preventDomainHijacking:
    title: 'Предотвращение кражи доменного имени'
    text: """
    После добавления доменного имени, Boris осуществляет мониторинг основных параметров: IP-адресов, SSL (TLS) сертификата, DNS и Whois записей. Настройте отправку уведомлений ответственным лицам, на случай несанкционированных изменений. Это очень удобно, когда управление доменом осуществляется его владельцем, а управление и администрирование серверов, сайтов, баз данных и т.п. осуществляется сторонней IT-компанией.

    Изменения и подозрительная активность в IP-адресах, SSL (TLS) сертификатах, DNS и Whois записях - это первый признак мошеннической деятельности относительно Вашего домена. Для предотвращения кражи и/или перенаправления трафика, Boris настоятельно рекомендует включить мониторинг по данным параметрам и настроить уведомления для всех ответственных лиц. Данный функционал 100% бесплатен. Основная разница между планами "Free" и "Paid" - это возможность получать не только уведомления посредством email, но и через СМС-сообщения. СМС-уведомления позволяют быстрее реагировать на потенциальные риски и сократить время решения возникших проблем.

    Всегда важно помнить о продлении периода регистрации доменных имен, так же как и о своевременном перевыпуске SSL-сертификатов. Boris готов помочь и напомнить Вам о приближающихся сроках. Включите уведомления о сроках регистрации домена и Boris вышлет уведомления всем ответственным лицам за месяц, неделю и сутки до окончания срока регистрации доменного имени. Для доменов работающих через SSL (TLS) сертификат доступны уведомления о нарушении целостности отпечатка сертификата и приближающемся сроке окончания его действия. Для более подробной информации о мониторинге SSL (TLS) сертификата читайте ниже.
    """

  SSLcertificate:
    title: 'Целостность SSL (TLS) сертификата'
    text: """
    В активном процессе работы очень легко пропустить дату окончания срока действия SSL (TLS) сертификата. Очень важно всегда заранее перевыпускать новый сертификат, так как это может привести к большому оттоку трафика на Ваших ресурсах.

    Для мониторинга целостности SSL (TLS) сертификата и его срока действия, во время добавления сервера, укажите `https` протокол, пример: `https://example.com`. Как только SSL сертификат обнаружен и подтвержден - Boris будет регулярно сверять его отпечаток. В разделе SSL-сертификата укажите контакты, которые будут уведомлены о нарушении целостности и приближающейся дате окончания действия сертификата, о которой Boris напомнит за месяц, неделю и сутки.
    """

  domainExpiration:
    title: 'Уведомления о сроках регистрации домена'
    text: """
    При указанной дате окончания срока действия доменного имени в Whois записи (*доступно на 98% доменов*), включите уведомления для всех ответственных лиц (*полезно для владельцев доменного имени*). Boris уведомит Вас за месяц, неделю и сутки до окончания регистрации доменного имени.

    Своевременное продление регистрации доменного имени очень важная процедура, так как упустив момент, Вы можете лишиться его и оно может быть занято (выкуплено) кем-то другим, без возможности возврата.
    """

  contentCRC:
    title: 'Предотвращение нарушения целостности и подмены данных'
    text: """
    Точки мониторинга (`http` или `https`) могут быть настроены на контроль целостности важных данных. Добавьте точку мониторинга, указывающую на данные, которые должны оставаться неизменными. Эти данные могут быть представлены в виде HTML, выборки из БД, контрольной суммы или любом другом текстовом виде.

    В разделе "*Content*", точки мониторинга, Вы можете настроить уведомления на все изменения контента возвращаемого данной точкой. При нарушении целостности данных, уведомления будут высланы в виде email и/или СМС-сообщений всем ответственным лицам.

    Данный функционал будет полезен для следующих примеров:

    - Страница контактов;
    - Отпечаток сервера (контрольная сумма ОС);
    - Схема БД;
    - Контрольная сумма файловой системы
    - Критические данные ОС (прим.: `/etc/passwd`);
    - Целостность исполняемого кода (предотвращение инкапсуляции).
    """

  addEmail:
    title: 'Добавление и подтверждение email-адреса'
    text: """
    Для добавления email-адреса, перейдите в раздел "*Настройки*" (выпадающее меню под именем Вашего аккаунта). В разделе "*Контакты*" нажмите на "*Добавить email-адрес*" укажите email-адрес и выберите язык уведомлений.

    Далее, для подтверждения адреса - проследуйте по ссылке полученной в письме от Boris'а. Как только адрес будет подтвержден, он будет доступен для добавления в списки уведомлений.
    """

  addPhone:
    title: 'Добавление и подтверждение телефонного номера'
    text: """
    Для добавления телефона, перейдите в раздел "*Настройки*" (выпадающее меню под именем Вашего аккаунта). В разделе "*Контакты*" нажмите на "*Телефоны*" и "*Добавить телефон*", укажите телефонный номер, начинающийся с символа `+` в [международном формате](https://en.wikipedia.org/wiki/E.123) и выберите язык уведомлений.

    Для подтверждения телефонного номера у Вас имеется две опции:

    - __Короткий-код__: На указанный телефонный номер будет направленно СМС-сообщение, содержащее короткий-код, который необходимо ввести на сайте;
    - __Ссылка__: На указанный телефонный номер будет направлено СМС-сообщение, содержащее ссылку-подтверждение, перейдя по которой, номер будет подтвержден. Эта опция очень удобна при добавлении номера человека, который не рядом с Вами, так как нет необходимости вводить код.

    Как только телефонный номер успешно подтвержден, он будет доступен для добавления в списки уведомлений.
    """

  servers:
    title: 'Добавление сервера'
    text: """
    Для добавления сервера перейдите в раздел "*Сервера*" (верхнее навигационное меню) и нажмите на большую желтую кнопку "*Добавить сервер*". Далее введите полный URL адрес до Вашего сервера с указание протокола, `http` или `https`. Позже Вы сможете индивидуально указать используемый протокол для каждой точки мониторинга. В качестве *адреса сервера* может быть использован любой публичный IPv4-адрес или доменное имя. В случае, если Ваш web-сервер слушает порт отличный от `80`, Вы так же его можете указать через двоеточие, например: `scheme://address:port`.

    Далее, Вам необходимо подтвердить Ваши права на сервер, для этого доступны следующие опции:

    - __Meta-тег__ - Классический meta-тег, добавленный в заголовок Вашей главной страницы (index) или на все страницы. Данный способ удобен, когда у Вас есть доступ к файловой системе и коду сайта;
    - __Файл__ - Добавьте файл с указанным содержанием в корневую директорию Вашего вебсайта, содержание файла должно начинаться с `boris-domain: `. Данный способ удобен при наличии доступа через FTP;
    - __DNS-запись__ - Добавьте TXT запись с указанны содержанием к основному доменному имени (`@`). Запись должна начинаться с `boris-domain: `. Данный способ удобен при наличии доступа к управлению DNS записями
    - __Заголовок ответа__ - Добавьте пользовательский заголовок ответа с указанным содержанием. Ключ заголовка должен быть `x-boris-domain`. Данный способ удобен при наличии доступа к web- или proxy-серверу.

    Более подробная информация с примерами кода указана на странице подтверждения сервера (доступна после заполнения формы). Не удаляйте код, после его успешного подтверждения, так как это приведет к приостановлению сервиса по данному серверу. До повторного добавления кода подтверждения.
    """
    
  endpoints:
    title: 'Добавление точки мониторинга'
    text: """
    После успешного добавления и подтверждения сервера/домена, нажмите на большую желтую кнопку "*Добавить точку мониторинга*" и введите URI-путь, который имеет код ответа `200`. Для добавления параметров аутентификации нажмите "*Параметры аутентификации*" и введите *Логин* и *Пароль* для данного пути. У вас есть три опции: `http`, `https` и `ssh`. Первые две имеют следующий функционал:

    - __Анти-кеш__ - Для избежания кэширования ответов сервера, Вы можете добавить специальное ключ-слово `{{rand}}` (с двойными фигурными скобками). Данное ключевое слово будет заменено случайной строкой при каждом обращении к серверу. Пример: `/path?purge={{rand}}`;
    - __Пре-рендеринг__ - Если Ваше веб-приложение работает через "hashbang" `#!`, Boris рекомендует добавить следующий параметр: `/path?_escaped_fragment_=`;
    - __Защищенная точка мониторинга__ - Boris поддерживает точки мониторинга защищенные парой логин/пароль. Boris рекомендует использовать защищенные пути, особенно при возврате *пользовательских данных*;
    - __Целостность контента__ - Получайте уведомления о всех изменениях возвращаемого контента точкой мониторинга. Данная опция полезна при контроле целостности данных, важных для Вашего бизнеса. Например страница с контактами или лицензией;
    - __Время ответа__ - Анализ и мониторинг. Получайте уведомления при долгом ответе или недоступности Вашего сервера;
    - __Код ответа__ - Получайте уведомления об изменениях в коде ответа Вашей точки мониторинга;
    - __Доступность сервера__ - Анализ и мониторинг. Получайте уведомления о недоступности точки мониторинга;
    - __Пользовательские данные__ - Сбор и построение графиков для последующего анализа и уведомлений из пользовательских данных, данные принимаются в формате `JSON` и `XML`, для более подробной информации читайте ниже.

    Третья опция - `ssh`, позволяет собирать данные о здоровье Вашего сервера через SSH, более подробная информация о подключении точки мониторинга через SSH и ее особенностях читайте ниже.
    """

  customData:
    title: 'Пользовательские данные'
    text: """
    Для сбора, анализа и уведомлений по пользовательским данным, точка мониторинга должна возвращать структурированные данные в виде `JSON` или `XML`, которые удовлетворяют ряду правил (см. ниже). Данный способ позволяет передать любые необходимые данные для последующего анализа и уведомлений. Это могут быть данные из БД, API или любые другие. Для сохранности данных мы рекомендуем использовать `HTTPS` протокол и закрыть точку мониторинга парой логин/пароль. Области применения:

    - Аналитика посещений;
    - Аналитика пользователей;
    - Аналитика приложения и его целей;
    - Аналитика сервера;
    - Аналитика рекламных кампаний и их целей;
    - многое другое.
    """

  json:
    title: 'Пользовательские данные: JSON'
    text: """
    Для мониторинга и анализа пользовательских данных, возвращаемых точкой мониторинга, Boris поддерживает формат JSON. Перед добавлением точки мониторинга в панели управления - точка мониторинга уже должна быть настроена на возврат необходимых данных. Рекомендуем заранее закрыть такую точку парой логин/пароль.

    __Строгий формат:__

    - Content-type: `application/json`;
    - Максимальное количество ключей: `100`;
    - Максимальное количество вложенных ключей: `32`;
    - Максимальная длина имени ключа: `24`;
    - Тип данных: `Number`/`Object`;
    - Тип вложенных данных: `Number`;
    - Кодировка: `utf8`.

    __Пример JSON-данных:__
    ```json
    {
      "users": {
        "total":9083,
        "active":2436,
        "online":268
      },
      "instances":5,
      "hits":{
        "total":823090349,
        "minute":54,
        "hour":2861,
        "day":54380
      },
      "orders":{
        "total":79805,
        "minute":4,
        "hour":327,
        "day":5380
      }
    }
    ```

    Данные из примера выше будут организованы в 4 графика, вложенные объекты будут организованы в графики с несколькими линиями. Главным ключом (используется для мониторинга и уведомлений) будет выбран `total`.

    "*Главные*" ключи вложенных объектов должны иметь следующие имена (в порядке убывания приоритета):

    - `free`;
    - `total`;
    - `used`;
    - `use`.

    Если вложенный объект имеет несколько "*главных*" ключей, более приоритезированный будет выбран. В случае, если вложенный объект не имеет "*главных*" ключей, будет добавлен дополнительный ключ, содержащий сумму всех значений.

    Уведомления для вложенных объектов могут быть настроены только на данные типа *Number* "*главных*" ключей.

    В случае отображения значений равных `-1` и/или `0` для полученных данных (*будет заметно на графиках*) это может означать:

    - Недоступность точки мониторинга;
    - Недоступность значений в возвращаемых данных.

    Главная цель значений `-1` и/или `0` это обозначение наличия проблемы и привлечение Вашего внимания.
    """

  xml:
    title: 'Пользовательские данные: XML'
    text: """
    Для мониторинга и анализа пользовательских данных, возвращаемых точкой мониторинга, Boris поддерживает формат XML. Перед добавлением точки мониторинга в панели управления - точка мониторинга уже должна быть настроена на возврат необходимых данных. Рекомендуем заранее закрыть такую точку парой логин/пароль.

    __Строгий формат:__

    - Content-type: `text/xml`/`application/xml`;
    - Имя корневого ключа: `data`;
    - Максимальное количество ключей: `100`;
    - Максимальное количество вложенных ключей: `32`;
    - Максимальная длина имени ключа: `24`;
    - Тип данных: `Number`/`Object`;
    - Тип вложенных данных: `Number`;
    - Кодировка: `utf8`.

    __Пример XML-данных:__
    ```xml
    <data>
      <users>
        <total>144</total>
        <active>67</active>
        <online>104</online>
      </users>
      <instances>1354</instances>
      <hits>
        <total>14345344</total>
        <minute>67</minute>
        <hour>1454</hour>
        <day>10454</day>
      </hits>
      <orders>
        <total>4431</total>
        <minute>2</minute>
        <hour>80</hour>
        <day>2390</day>
      </orders>
    </data>
    ```

    Данные из примера выше будут организованы в 4 графика, вложенные объекты будут организованы в графики с несколькими линиями. Главным ключом (используется для мониторинга и уведомлений) будет выбран `total`.

    "*Главные*" ключи вложенных объектов должны иметь следующие имена (в порядке убывания приоритета):

    - `free`;
    - `total`;
    - `used`;
    - `use`.

    Если вложенный объект имеет несколько "*главных*" ключей, более приоритезированный будет выбран. В случае если вложенный объект не имеет "*главных*" ключей, будет добавлен дополнительный ключ содержащий сумму всех значений.

    Уведомления для вложенных объектов могут быть настроены только на данные типа *Number* "*главных*" ключей.

    В случае отображения значений равных `-1` и/или `0` для полученных данных (будет заметно на графиках) это может означать:

    - Недоступность точки мониторинга;
    - Недоступность значений в возвращаемых данных.

    Главная цель значений `-1` и/или `0` это обозначение наличия проблемы и привлечение Вашего внимания.
    """

  ssh:
    title: 'Мониторинг через SSH'
    text: """
    __Имейте ввиду: на данный момент мониторинг через SSH нацелен на сервера под управлением ОС Linux или Mac OS X.__ Требования для мониторинга через SSH:

    - Для сбора данных Boris настоятельно рекомендует использовать отдельного пользователя, который может исполнять __только__ следующие команды, если у пользователя нет прав на исполнение таких команд - данные собираться не будут, но мониторинг и доступность сервера через SSH будет осуществляться в обычном режиме:
      - `top`;
      - `grep`;
      - `tail`;
      - `awk`;
      - `uptime`;
      - `df`;
      - права на чтение `tail /proc/uptime`.
    - Логин и пароль от пользователя с правами на подключение через SSH.


    В случае, если пользователь имеет права на исполнение команд выше, будут собраны следующие данные:

    - Время работы сервера (из `/proc/uptime`);
    - Сообщения сервера (все сообщения выводимые пользователю после входа в систему);
    - Количество пользователей в системе;
    - Нагрузка сервера;
    - Количество исполняемых задач (из `top`);
    - Загрузка CPU (из `top`) `idle`/`user`/`system`/`total`/etc.;
    - Использование памяти: `used`/`free`/`buffers`;
    - Использование SWAP: `used`/`free`/`cached`/`total`;
    - Использование дисков: `used%`/`free`/etc.

    С доступом на исполнение команд и без такового, будут собраны следующие данные:

    - Доступность сервера и качество соединения;
    - Время ответа сервера;
    - Время работы сервера за месяц / 3 дня / 12 часов.

    Для каждого типа собираемых данных Вы можете включить уведомления, высылаемые в виде писем и СМС-сообщений. Мониторинг через SSH очень полезен для "двойной прочности". В то время, когда сервер недоступен, встроенные механизмы для анализа, мониторинга и уведомлений могут не сработать. Включите уведомления о таких событиях, как сверх-потребление ресурсов сервера, малый остаток свободного места на жестком диске, утечка памяти, SSH-логины и др.

    В случае отображения значений равных `-1` и/или `0` для полученных данных (будет заметно на графиках) это может означать:

    - Недоступность точки мониторинга;
    - Недоступность значений в возвращаемых данных.

    Главная цель значений `-1` и/или `0` это обозначение наличия проблемы и привлечение Вашего внимания.
    """

  sshLoginSMS:
    title: 'СМС-уведомления о входах через SSH'
    text: """
    1. Перейдите в SSH-точку мониторинга;
    2. Найдите строку со значением "*users*";
    3. Нажмите на "*ON*" в колонке "*Получать уведомления*" (кнопка станет зеленой);
    4. Нажмите на иконку "*Шестеренка*";
    5. В открывшейся области найдите поля "*От*" и "*До*";
    6. Введите только в поле "*От*" значение - `0`, затем нажмите "*Сохранить*", дождитесь появление надписи "*Сохранено*";
    7. В таблице ниже отметьте контакты, на которые необходимо отправить уведомление о всех SSH-логинах;
    8. Закройте область настройки повторно нажав на иконку "*Шестеренка*".
    """